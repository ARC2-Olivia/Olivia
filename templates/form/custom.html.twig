{% block recaptcha_widget %}
	{% set recaptchaId = id ~ '_recaptchaWidget' %}
	{% set recaptchaOnLoadCallbackName = recaptchaId ~ '_onLoadCallback' %}
	{{ form_widget(form.token) }}
	<div id="{{ recaptchaId }}"
		 class="g-recaptcha{% if attr is not empty and attr.class is not null %} {{ attr.class }}{% endif %}"
		 data-sitekey="{{ google_recaptcha_site_key }}"
		 data-binding="{{ form.token.vars.id }}"
	></div>
	<script type="text/javascript">
        function {{ recaptchaOnLoadCallbackName }}() {
            const element = document.getElementById('{{ recaptchaId }}')
            grecaptcha.render(element, {
                'callback': (response) => {
                    if ("binding" in element.dataset) {
                        const binding = document.getElementById(element.dataset.binding);
                        if (binding) {
                            binding.value = response;
                            element.dataset.proceed = "yes";
                        }
                    }
                },
                'expired-callback': () => {
                    element.dataset.proceed = "no";
                }
            });
            element.closest('form').addEventListener("submit", (e) => {
                if ("proceed" in element.dataset && element.dataset.proceed === "yes") return;
                e.preventDefault();
            });
        }
	</script>
	<script src="https://www.google.com/recaptcha/api.js?onload={{ recaptchaOnLoadCallbackName }}&render=explicit" async defer></script>
{% endblock %}