{% extends 'lesson/_base_lesson.html.twig' %}
{% trans_default_domain 'app' %}

{% block lessonContent %}
    <div class="lesson-sections">
        {% include 'lesson/_show_sectionNav.html.twig' %}
        {% include 'lesson/_show_sectionMain.html.twig' %}
        {% include 'lesson/_show_sectionOther.html.twig' %}
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {{ encore_entry_link_tags('quill') }}
    <style>
        .lesson-notes {
            display: flex;
            flex-direction: column;
            row-gap: 24px;
            height: 100%;
        }

        .lesson-notes-caption {
            font-weight: bold;
            font-size: 20px;
            padding: 0;
            margin: 0;
            flex-basis: 0;
        }

        .lesson-notes-actions {
            flex-basis: 0;
        }

        .lesson-notes-content {
            flex-basis: 0;
            flex-grow: 1;
        }

        .lesson-notes-content > textarea {
            display: block;
            border-radius: 4px;
            border: solid 1px rgba(0, 0, 0, 0.2);
            width: 100%;
            padding: 8px;
            outline: none;
            min-height: 512px;
            height: 100%;
            resize: none;
        }

        .lesson-notes-content > textarea.saved {
            border-color: var(--app-color-green);
        }

        .lesson-notes-content > textarea.edited {
            border-color: var(--app-color-red);
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('axios') }}
    <script>
        window.addEventListener("load", () => {
            const notes = document.getElementById("notes");
            const saveNotes = document.getElementById("save-notes");

            notes.addEventListener("input", function() {
                this.classList.remove("saved");
                this.classList.add("edited");
            });

            saveNotes.addEventListener("click", function() {
                if ("path" in this.dataset && "lesson" in this.dataset && "user" in this.dataset) {
                    const data = {
                        lesson: this.dataset.lesson,
                        user: this.dataset.user,
                        text: notes.value
                    }
                    axios({
                        url: this.dataset.path,
                        method: "PATCH",
                        data: data
                    }).then((response) => {
                        if (response.data.status) {
                            notes.classList.remove("edited");
                            notes.classList.add("saved");
                        }
                    });
                }
            });
        });
    </script>
{% endblock %}